ge_switch_led_light:
  alias: Configure GE Switch LED Light
  mode: single
  icon: hass:switch
  variables:
    node_parameter: 3
    node_size: 1
    node_ids:
    - 2
    - 3
    - 40
    - 41
    - 49
    - 50
    - 51
  fields:
    node_value:
      description: The config value used (0=on_without_power, 1==on_with_power, 2==always_off,
        3==always_on)
      example: 2
  sequence:
  - service: zwave.set_config_parameter
    data:
      node_id: 2
      parameter: '{{node_parameter|int}}'
      size: '{{node_size|int}}'
      value: '{{node_value|int}}'
  - service: zwave.set_config_parameter
    data:
      node_id: 3
      parameter: '{{node_parameter|int}}'
      size: '{{node_size|int}}'
      value: '{{node_value|int}}'
  - service: zwave.set_config_parameter
    data:
      node_id: 40
      parameter: '{{node_parameter|int}}'
      size: '{{node_size|int}}'
      value: '{{node_value|int}}'
  - service: zwave.set_config_parameter
    data:
      node_id: 41
      parameter: '{{node_parameter|int}}'
      size: '{{node_size|int}}'
      value: '{{node_value|int}}'
  - service: zwave.set_config_parameter
    data:
      node_id: 49
      parameter: '{{node_parameter|int}}'
      size: '{{node_size|int}}'
      value: '{{node_value|int}}'
  - service: zwave.set_config_parameter
    data:
      node_id: 50
      parameter: '{{node_parameter|int}}'
      size: '{{node_size|int}}'
      value: '{{node_value|int}}'
  - service: zwave.set_config_parameter
    data:
      node_id: 51
      parameter: '{{node_parameter|int}}'
      size: '{{node_size|int}}'
      value: '{{node_value|int}}'
zone_pulse_lights:
  mode: single
  alias: Zone Light Pulse
  icon: hass:led-strip
  variables:
    lifx_mode: breathe
    lifx_brightness: 255
  fields:
    trigger_event:
      description: Trigger event ('enter' or 'leave')
      required: true
    trigger_zone:
      description: Trigger zone entity_id (e.g. 'zone.home')
      required: false
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger_zone == "zone.home" and trigger_event == "enter"
          }}'
      sequence:
      - service: lifx.effect_pulse
        target:
          entity_id:
          - light.living_room_bookshelf_left
          - light.living_room_bookshelf_right
        data:
          mode: '{{ lifx_mode }}'
          brightness: '{{ lifx_brightness|int }}'
          color_name: darkred
          cycles: 20
          period: 4
    - conditions:
      - condition: template
        value_template: '{{ trigger_zone == "zone.home" and trigger_event == "leave"
          }}'
      sequence:
      - service: lifx.effect_pulse
        target:
          entity_id:
          - light.living_room_bookshelf_left
          - light.living_room_bookshelf_right
        data:
          mode: '{{ lifx_mode }}'
          brightness: '{{ lifx_brightness|int }}'
          color_name: darkgreen
          cycles: 20
          period: 4
    - conditions:
      - condition: template
        value_template: '{{ trigger_zone in ["zone.rht", "zone.ncdg"] and trigger_event
          == "leave" }}'
      sequence:
      - service: lifx.effect_pulse
        target:
          entity_id:
          - light.living_room_bookshelf_left
          - light.living_room_bookshelf_right
        data:
          mode: '{{ lifx_mode }}'
          brightness: '{{ lifx_brightness|int }}'
          color_name: yellow
          cycles: 20
          period: 4
    default:
    - service: lifx.effect_pulse
      target:
        entity_id:
        - light.living_room_bookshelf_left
        - light.living_room_bookshelf_right
      data:
        mode: '{{ lifx_mode }}'
        brightness: '{{ lifx_brightness|int }}'
        color_name: homeassistant
        cycles: 20
        period: 4
'1628974088097':
  sequence:
  - variables:
      action_open: '{{ ''OPEN_'' ~ context.id }}'
  - service: notify.mobile_app_james_iphone
    data:
      message: Welcome home
      data:
        action_data:
          latitude: '35.783595'
          longitude: '-78.776728'
        actions:
        - action: '{{ action_open }}'
          title: Open Garage
          authenticationRequired: true
  - wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: '{{ action_open }}'
      context: {}
    continue_on_timeout: false
    timeout: 10
  - alias: Perform the action
    choose:
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger.event.data.action == action_open }}'
      sequence:
      - service: cover.open_cover
        target:
          entity_id: cover.garage_door_opener
  mode: single
  alias: Garage Door Actionable Notification
  icon: hass:garage
